name: Build and Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        options:
          - dev
          - prod

jobs:
  build-and-deploy:
    name: Build and Deploy to ${{ github.event.inputs.environment }}
    runs-on: java21-build
    env:
      DOCKER_BUILDKIT: 1

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Create Maven settings.xml for Docker build
        run: |
          SETTINGS_FILE="settings.xml"
          echo "<settings xmlns='http://maven.apache.org/SETTINGS/1.0.0'
                xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
                xsi:schemaLocation='http://maven.apache.org/SETTINGS/1.0.0
                                    https://maven.apache.org/xsd/settings-1.0.0.xsd'>
              <servers>
                <server>
                  <id>reposilite</id>
                  <username>${{ secrets.REPOSILITE_USERNAME }}</username>
                  <password>${{ secrets.REPOSILITE_PASSWORD }}</password>
                </server>
              </servers>
            </settings>" > "$SETTINGS_FILE"
          echo "Maven settings.xml for Docker created."

      - name: Get Image Tag and Name
        id: image_info
        run: |
          echo "tag=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "name=link-shortener-redirect-service" >> $GITHUB_OUTPUT

      - name: Build Docker Image
        run: |
          docker build \
            --secret id=maven-settings,src=settings.xml \
            -t ${{ steps.image_info.outputs.name }}:${{ steps.image_info.outputs.tag }} .
          echo "Docker image built: ${{ steps.image_info.outputs.name }}:${{ steps.image_info.outputs.tag }}"

      - name: Clean up Maven settings.xml
        if: always()
        run: |
          rm settings.xml
          echo "Cleaned up temporary settings.xml"

      - name: Import Image into MicroK8s
        run: |
          docker save ${{ steps.image_info.outputs.name }}:${{ steps.image_info.outputs.tag }} | sudo /snap/bin/microk8s ctr image import -
          echo "Image imported into MicroK8s."

      - name: Run Helm Upgrade
        run: |
          set -euo pipefail
          echo "Deploying with Helm..."
          sudo /snap/bin/microk8s helm upgrade --install \
            link-shortener-user-service-${{ github.event.inputs.environment }} \
            ./helm \
            --namespace ${{ github.event.inputs.environment }} \
            --values helm/values-${{ github.event.inputs.environment }}.yaml \
            --set image.repository=${{ steps.image_info.outputs.name }} \
            --set image.tag=${{ steps.image_info.outputs.tag }} \
            --set spring.profiles.active=${{ github.event.inputs.environment }}
          echo "Helm deployment finished."